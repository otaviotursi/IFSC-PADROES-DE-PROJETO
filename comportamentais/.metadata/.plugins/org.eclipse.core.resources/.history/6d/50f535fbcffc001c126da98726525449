package behavioral.chainOfResponsibility.exercise;


public class SaqueHandler {

	private SaqueHandler _successor;
	private int valorNota =0;
	private int saque =0;
	int qntNotas = 0;

	public void handleSaque(int resta) {
    	System.out.println("VALOR NOTA: "+valorNota+", restando: "+resta);
		qntNotas = 0;

		if(resta < valorNota && _successor == null) {
        	System.out.println("Saque abortado, sem notas compativeis, restando: "+resta);
		} else {
			while (resta > valorNota ) {
				resta-=valorNota;
				qntNotas++;
			}
			
			saque = resta;
			
			if(qntNotas > 0)      	
				System.out.println("Dispenser de "+valorNota+": "+qntNotas+" notas ");
		}
		
		this.HandleHelp();
	}
	
	public SaqueHandler(SaqueHandler handler, int valorNota ) {
		this._successor = handler;
		this.valorNota  = valorNota ;
	}
	

	public void HandleHelp() {
		if(_successor != null) {
			_successor.handleSaque(saque);
		}
	}
	

}
